name: Continuous Integration
"on":
  - push
jobs:
  test:
    name: Run tests
    runs-on: "${{ matrix.os }}"
    strategy:
      max-parallel: 4
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - 3.9.20
          - 3.10.15
          - 3.11.10
          - 3.12.6
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: "Setup Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install volta
        uses: volta-cli/action@v1
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv
      - name: Cache .venv
        uses: actions/cache@v3
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-${{ hashFiles('Pipfile') }}-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('Pipfile') }}-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          pipenv install --dev --skip-lock
      - name: "Setup Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node-version }}"
      - name: Get Yarn cache path
        id: yarn-cache-dir-path
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'
      - name: Cache Yarn cache
        id: cache-yarn-cache
        uses: actions/cache@v1
        with:
          path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Run Linting
        run: yarn lint
      - name: Run tests
        run: |
          yarn test
